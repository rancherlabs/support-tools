---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: alt-etcd-s3-sync
  name: etcd-s3
  namespace: kube-system
type: Opaque
data:
  # all values should be base64 encoded (ie: echo -n '123456' | base64)
  S3_ACCESS_KEY:
  S3_BUCKET_NAME:
  S3_BUCKET_REGION:
  S3_ENDPOINT:
  S3_FOLDER:
  S3_SECRET_KEY:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rolling-etcd-snapshots
  name: rolling-etcd-snapshots
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rolling-etcd-snapshots
  template:
    metadata:
      labels:
        app: rolling-etcd-snapshots
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: NotIn
                values:
                - windows
              - key: node-role.kubernetes.io/etcd
                operator: In
                values:
                - "true"
      containers:
      - args:
        - /opt/rke-tools/rke-etcd-backup
        - etcd-backup
        - save
        - --cacert
        - /etc/kubernetes/ssl/kube-ca.pem
        - --cert
        - /etc/kubernetes/ssl/kube-node.pem
        - --key
        - /etc/kubernetes/ssl/kube-node-key.pem
        - --s3-backup=true
        - --creation=12h
        - --retention=72h
        envFrom:
        - secretRef:
            name: etcd-s3
            optional: false
        image: rancher/rke-tools:v0.1.66
        imagePullPolicy: IfNotPresent
        name: rolling-etcd-snapshots
        volumeMounts:
        - mountPath: /backup
          name: rke-tools
        - mountPath: /etc/kubernetes
          name: k8s-certs
      hostNetwork: true
      tolerations:
      - effect: NoExecute
        key: node-role.kubernetes.io/etcd
        operator: Equal
        value: "true"
      volumes:
      - hostPath:
          path: /opt/rke/etcd-snapshots
          type: ""
        name: rke-tools
      - hostPath:
          path: /etc/kubernetes
          type: ""
        name: k8s-certs
