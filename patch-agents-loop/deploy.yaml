---
apiVersion: v1
data:
  main.sh: |
    #!/bin/bash

    if [[ -z $LoopSleep ]]
    then
      LoopSleep=60
    fi

    echo "Starting checks..."
    while true
    do
      for clusterid in `kubectl get clusters.management.cattle.io -o name | awk -F '/' '{print $2}' | grep -v local`;
      do
        echo "Checking cluster $clusterid"
        status=`kubectl get clusters.management.cattle.io ${clusterid} -o json | jq '.status.conditions[] | select(.type == "Connected") | .status' | tr -d '"'`
        if [ "$status" != "True" ]; then
          echo "Cluster $clusterid is not connected"
          kubectl patch clusters.management.cattle.io ${clusterid} -p '{"status":{"agentImage":"dummy"}}' --type merge
        else
          echo "Cluster $clusterid is connected"
        fi
      done
      echo "Sleeping..."
      sleep $LoopSleep
    done
kind: ConfigMap
metadata:
  name: patch-agents-loop
  namespace: cattle-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: patch-agents-loop
  name: patch-agents-loop
  namespace: cattle-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: patch-agents-loop
  template:
    metadata:
      labels:
        app: patch-agents-loop
    spec:
      serviceAccount: rancher
      serviceAccountName: rancher
      containers:
      - args:
        - /root/bin/main.sh
        env:
        - name: LoopSleep
          value: "60"
        image: rancherlabs/swiss-army-knife
        imagePullPolicy: IfNotPresent
        name: patch-agents-loop
        volumeMounts:
        - mountPath: /root/bin/
          name: patch-agents-loop
      volumes:
      - configMap:
          defaultMode: 493
          items:
          - key: main.sh
            mode: 0755
            path: main.sh
          name: patch-agents-loop
          optional: false
        name: patch-agents-loop